/*** BEGIN file-header ***/
#include "interfaces-enumtypes.h"
#include "colorbalance.h"
#include "colorbalancechannel.h"
#include "mixer.h"
#include "mixeroptions.h"
#include "mixertrack.h"
#include "navigation.h"
#include "propertyprobe.h"
#include "streamvolume.h"
#include "tuner.h"
#include "tunernorm.h"
#include "tunerchannel.h"
#include "videoorientation.h"
#include "xoverlay.h"

/*** END file-header ***/
/*** BEGIN file-production ***/

/* enumerations from "@filename@" */
/*** END file-production ***/
/*** BEGIN value-header ***/
GType
@enum_name@_get_type (void)
{
  static volatile gsize g_define_type_id__volatile = 0;
  if (g_once_init_enter (&g_define_type_id__volatile)) {
    static const G@Type@Value values[] = {
/*** END value-header ***/
/*** BEGIN value-production ***/
{ @VALUENAME@, "@VALUENAME@", "@valuenick@" },
/*** END value-production ***/
/*** BEGIN value-tail ***/
{ 0, NULL, NULL }
    };
    GType g_define_type_id = g_@type@_register_static ("@EnumName@", values);
    g_once_init_leave (&g_define_type_id__volatile, g_define_type_id);
  }
  return g_define_type_id__volatile;
}

/*** END value-tail ***/
